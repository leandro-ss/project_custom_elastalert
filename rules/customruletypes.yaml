# Alert when there is a sudden spike in the volume of events
# (Required)
# Rule name, must be unique
name: percentileSpikeRule

# (Required)
# Type of alert.
# the spike rule type compares the number of events within two sliding windows to each other
type: custom.ruletypes.PercentileOfFieldSpikeRule

# (Required)
# Index to search, wildcard supported
index: filebeat-access-*

# (Required one of _cur or _ref, spike specific)
# The minimum number of events that will trigger an alert
# For example, if there are only 2 events between 12:00 and 2:00, and 20 between 2:00 and 4:00
# _cur is 2 and _ref is 20, and the alert WILL fire because 20 is greater than threshold_cur

# The minimum number of events that must exist in the reference window for an alert 
# to trigger. For example, if spike_height: 3 and threshold_ref: 10,
# then the ‘reference’ window must contain at least 10 events and the ‘current’ 
# window at least three times that for an alert to be triggered.
#threshold_ref: 

# The minimum number of events that must exist in the current window for an alert to trigger.
# For example, if spike_height: 3 and threshold_cur: 60, then an alert will occur 
# if the current window has more than 60 events and the reference window has less 
# than a third as many.
threshold_cur: 100

# (Required, spike specific)
# The size of the window used to determine average event frequency
# We use two sliding windows each of size timeframe
# To measure the 'reference' rate and the current rate
timeframe:
  minutes: 1

# (Required, spike specific)
# The spike rule matches when the current window contains spike_height times more
# events than the reference window
spike_height: 1.20

# (Required, spike specific)
# The direction of the spike
# 'up' matches only spikes, 'down' matches only troughs
# 'both' matches both spikes and troughs
spike_type: "up"

# (Required)
# A list of Elasticsearch filters used for find events
# These filters are joined with AND and nested in a filtered query
# For more info: http://www.elasticsearch.org/guide/en/elasticsearch/reference/current/query-dsl.html
#filter:
#- query:
#    query_string:
#      query: "answer: 200"
#- type:
#    value: "log"

# Counts of documents will be stored independently for each value of query_key.
# Only num_events documents, all with the same value of query_key, will trigger an alert.
#query_key: clientip

# (Required) # Required Custom Field
target_field: time_taken
percentile_value: 90

# If true, ElastAlert will make an aggregation query against Elasticsearch 
# to get counts of documents matching each unique value of query_key.
# This must be used with query_key and doc_type. This will only return a maximum
# of terms_size, default 50, unique terms.
#use_terms_query: true

# When used with use_terms_query,
# this is the maximum number of terms returned per query. Default is 50.
#terms_size: 100

# Specify the _type of document to search for.
# This must be present if use_count_query or use_terms_query is set.
doc_type: "log"

# (Required)
# The alert is used when a match is found
alert:
- "slack"
slack:
# The <"https://xxxxx.slack.com/services/new/incoming-webhook"> webhook URL that includes your auth data and the ID of the channel (room) you want to post to.
slack_webhook_url: "https://hooks.slack.com/services/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"